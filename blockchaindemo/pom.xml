<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.blockchain</groupId>
	<artifactId>blockchaindemo</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>blockchaindemo</name>
	<!-- FIXME change it to the project's website -->
	<url>http://www.example.com</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>

	<dependencies>

		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.11.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.11.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.11.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.json/json -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20190722</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok-maven-plugin -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok-maven-plugin</artifactId>
			<version>1.18.6.0</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<distributionManagement>
		<repository>
			<uniqueVersion>false</uniqueVersion>
			<id>corp1</id>
			<name>Corporate Repository</name>
			<url>scp://repo/maven2</url>
			<layout>default</layout>
		</repository>

	</distributionManagement>
	<build>
		<pluginManagement>
			<!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
			<plugins>
				<!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.1</version>
				</plugin>

				<plugin>
					<!-- Build an executable JAR -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.1.0</version>
					<!--<configuration>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<classpathPrefix>lib/</classpathPrefix>
								<mainClass>com.blockchain.Bitcoin</mainClass>
							</manifest>
						</archive>
					</configuration>
					-->
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>

				<!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.7.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>


				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.6.0</version>
					<executions>
						<!-- Remove existing image from local repo -->
						<execution>
							<id>docker-clean</id>
							<phase>install</phase>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<executable>docker</executable>
								<workingDirectory>${project.basedir}</workingDirectory>
								<arguments>
									<argument>rmi</argument>
									<argument>${project.groupId}/${project.artifactId}:${project.version}</argument>
								</arguments>
							</configuration>
						</execution>


						<!-- 

      Create new docker image using Dockerfile which must be present in current working directory.

      Tag the image using maven project version information.

    -->

						<execution>

							<id>docker-build</id>

							<phase>install</phase>

							<goals>

								<goal>exec</goal>

							</goals>

							<configuration>

								<executable>docker</executable>

								<workingDirectory>${project.basedir}</workingDirectory>

								<arguments>

									<argument>build</argument>

									<argument>-t</argument>

									<argument>${project.groupId}/${project.artifactId}:${project.version}</argument>

									<argument>.</argument>

								</arguments>

							</configuration>

						</execution>


						<!-- Login and Push the image to a docker repo. -->

						<execution>

							<id>docker-login</id>

							<phase>deploy</phase>

							<goals>

								<goal>exec</goal>

							</goals>

							<configuration>

								<executable>docker</executable>

								<workingDirectory>${project.basedir}</workingDirectory>

								<arguments>

									<argument>login</argument>

									<argument>-u</argument>

									<argument>${docker.user}</argument>

									<argument>-p</argument>

									<argument>${docker.password}</argument>

									<argument>${docker.url}</argument>

								</arguments>

							</configuration>

						</execution>

						<execution>

							<id>docker-push</id>

							<phase>deploy</phase>

							<goals>

								<goal>exec</goal>

							</goals>

							<configuration>

								<executable>docker</executable>

								<workingDirectory>${project.basedir}</workingDirectory>

								<arguments>

									<argument>push</argument>

									<argument>${project.groupId}/${project.artifactId}:${project.version}</argument>

								</arguments>

							</configuration>

						</execution>

					</executions>

				</plugin>

			</plugins>
		</pluginManagement>
	</build>


</project>